// <auto-generated />
using System;
using DAB_2_Solution_grp5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAB_2_Solution_grp5.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"), 1L, 1);

                    b.Property<int>("CitizenId")
                        .HasColumnType("int");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Participants")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ActivityId");

                    b.HasIndex("CitizenId");

                    b.HasIndex("FacilityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Citizen", b =>
                {
                    b.Property<int>("CitizenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CitizenId"), 1L, 1);

                    b.Property<string>("CVR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CitizenId");

                    b.ToTable("Citizens");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacilityId");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.MaintenanceLog", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("PersId")
                        .HasColumnType("int");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("FacilityId")
                        .IsUnique();

                    b.HasIndex("PersId");

                    b.ToTable("MaintenanceLogs");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Personnel", b =>
                {
                    b.Property<int>("PersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersId"), 1L, 1);

                    b.HasKey("PersId");

                    b.ToTable("Personnels");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Activity", b =>
                {
                    b.HasOne("DAB_2_Solution_grp5.Models.Citizen", "Citizen")
                        .WithMany("Activities")
                        .HasForeignKey("CitizenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_2_Solution_grp5.Models.Facility", "Facility")
                        .WithMany("Activities")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizen");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.MaintenanceLog", b =>
                {
                    b.HasOne("DAB_2_Solution_grp5.Models.Facility", "Facility")
                        .WithOne("MaintenanceLog")
                        .HasForeignKey("DAB_2_Solution_grp5.Models.MaintenanceLog", "FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAB_2_Solution_grp5.Models.Personnel", "Personnel")
                        .WithMany("MaintenaceLogs")
                        .HasForeignKey("PersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Citizen", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Facility", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("MaintenanceLog")
                        .IsRequired();
                });

            modelBuilder.Entity("DAB_2_Solution_grp5.Models.Personnel", b =>
                {
                    b.Navigation("MaintenaceLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
